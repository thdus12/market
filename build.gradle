plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.2'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.api'
version = '0.0.1-SNAPSHOT'
def querydslVersion = "5.6.1"

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign:4.2.0'

    implementation "io.github.openfeign.querydsl:querydsl-jpa:${querydslVersion}:jakarta"

    implementation 'commons-io:commons-io:2.18.0'
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation 'org.apache.commons:commons-text:1.10.0'

    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client:3.3.2'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor "io.github.openfeign.querydsl:querydsl-apt:${querydslVersion}:jakarta"
    annotationProcessor("jakarta.persistence:jakarta.persistence-api")
    annotationProcessor("jakarta.annotation:jakarta.annotation-api")
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

ext {
    generatedJavaSourceDir = "src/generated/java"
}

sourceSets {
    generated {
        java.srcDir generatedJavaSourceDir
    }
    main {
        resources {
            srcDirs = [
                "$projectDir/src/main/resources/profile/local",
                "$projectDir/src/main/resources"
            ]
        }
    }
}

tasks {
    processResources {
        duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    }
    test {
        useJUnitPlatform()
    }
}
